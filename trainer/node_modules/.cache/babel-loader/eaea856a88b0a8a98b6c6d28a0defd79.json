{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Exercises as E1 } from \"../Common/Enums\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Dropdown } from 'semantic-ui-react';\n\nconst Form = ({\n  setInputText,\n  Exercises,\n  setExercises,\n  inputText\n}) => {\n  _s();\n\n  var [selectedExercise, setSelectedExercise] = useState([]);\n  const [selectedExerciseList, setSelectedExerciseList] = useState(null);\n\n  const convertToArray = obj => {\n    return Object.keys(obj).map(key => {\n      return {\n        id: key,\n        name: obj[key]\n      };\n    });\n  };\n\n  const setSelectedExersiceHandler = event => {\n    selectedExercise = convertToArray(E1[event.target.value]);\n    console.log(selectedExercise);\n    setSelectedExerciseList(selectedExercise.length > 0 && selectedExercise.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.id,\n        children: item.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this);\n    }, this));\n    console.log(selectedExerciseList);\n  };\n\n  const inputTextHandler = e => {\n    setInputText(e.target.value);\n  };\n\n  const sumbitExerciseHandler = e => {\n    e.preventDefault();\n    setExercises([...Exercises, {\n      text: inputText,\n      completed: false,\n      id: Math.random() * 1000\n    }]);\n    setInputText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sumbitExerciseHandler,\n      className: \"exercise-button\",\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-plus-square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"custom\",\n        className: \"filter-exercises\",\n        onChange: inputTextHandler,\n        children: selectedExerciseList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: setSelectedExersiceHandler,\n        name: \"exercises\",\n        className: \"filter-exercises\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Back\",\n          children: \"Back exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Legs\",\n          children: \"Legs exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Abs\",\n          children: \"Abs exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Shoulders\",\n          children: \"Shoulders exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FullBody\",\n          children: \"FullBody exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Chest\",\n          children: \"Chest exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"mH8N6tsx032PE9apWPuyhI+azPQ=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/Form.js"],"names":["React","useState","Exercises","E1","Dropdown","Form","setInputText","setExercises","inputText","selectedExercise","setSelectedExercise","selectedExerciseList","setSelectedExerciseList","convertToArray","obj","Object","keys","map","key","id","name","setSelectedExersiceHandler","event","target","value","console","log","length","item","i","inputTextHandler","e","sumbitExerciseHandler","preventDefault","text","completed","Math","random"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,SAAS,IAAIC,EAArB,QAA+B,iBAA/B;AACA,OAAO,kCAAP;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAcJ,EAAAA,SAAd;AAAyBK,EAAAA,YAAzB;AAAsCC,EAAAA;AAAtC,CAAD,KAAsD;AAAA;;AAE/D,MAAI,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,oBAAD,EAAuBC,uBAAvB,IAAkDX,QAAQ,CAAC,IAAD,CAAhE;;AACA,QAAMY,cAAc,GAAIC,GAAD,IAAS;AAC5B,WAAOC,MAAM,CAACC,IAAP,CAAYF,GAAZ,EAAiBG,GAAjB,CAAsBC,GAAD,IAAS;AACjC,aAAO;AAAEC,QAAAA,EAAE,EAAED,GAAN;AAAWE,QAAAA,IAAI,EAAEN,GAAG,CAACI,GAAD;AAApB,OAAP;AACH,KAFM,CAAP;AAGH,GAJD;;AAQA,QAAMG,0BAA0B,GAAIC,KAAD,IAAW;AAE1Cb,IAAAA,gBAAgB,GAAGI,cAAc,CAACV,EAAE,CAACmB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAH,CAAjC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,gBAAZ;AACAG,IAAAA,uBAAuB,CACnBH,gBAAgB,CAACkB,MAAjB,GAA0B,CAA1B,IACGlB,gBAAgB,CAACQ,GAAjB,CAAqB,CAACW,IAAD,EAAOC,CAAP,KAAa;AACrC,0BACI;AAAgB,QAAA,KAAK,EAAED,IAAI,CAACT,EAA5B;AAAA,kBAAiCS,IAAI,CAACR;AAAtC,SAAaS,CAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJM,EAIJ,IAJI,CAFgB,CAAvB;AAOAJ,IAAAA,OAAO,CAACC,GAAR,CAAYf,oBAAZ;AACH,GAZD;;AAeA,QAAMmB,gBAAgB,GAAIC,CAAD,IAAM;AAC3BzB,IAAAA,YAAY,CAACyB,CAAC,CAACR,MAAF,CAASC,KAAV,CAAZ;AACH,GAFD;;AAIA,QAAMQ,qBAAqB,GAAID,CAAD,IAAO;AACjCA,IAAAA,CAAC,CAACE,cAAF;AACA1B,IAAAA,YAAY,CAAC,CAAC,GAAGL,SAAJ,EACT;AAACgC,MAAAA,IAAI,EAAE1B,SAAP;AAAiB2B,MAAAA,SAAS,EAAG,KAA7B;AAAoChB,MAAAA,EAAE,EAAEiB,IAAI,CAACC,MAAL,KAAc;AAAtD,KADS,CAAD,CAAZ;AAEA/B,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACH,GALD;;AAQA,sBACI;AAAA,4BACS;AAAQ,MAAA,OAAO,EAAE0B,qBAAjB;AAAwC,MAAA,SAAS,EAAC,iBAAlD;AAAoE,MAAA,IAAI,EAAC,QAAzE;AAAA,6BACD;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,YADT,eAII;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,kBAAhC;AAAmD,QAAA,QAAQ,EAAEF,gBAA7D;AAAA,kBACKnB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ,eASI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAQ,QAAA,QAAQ,EAAEU,0BAAlB;AAA8C,QAAA,IAAI,EAAC,WAAnD;AAA+D,QAAA,SAAS,EAAC,kBAAzE;AAAA,gCAEI;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAQ,UAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI;AAAQ,UAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,eAOI;AAAQ,UAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA9DD;;GAAMhB,I;;KAAAA,I;AAgEN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport {Exercises as E1 } from \"../Common/Enums\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Dropdown } from 'semantic-ui-react'\n\nconst Form = ({setInputText,Exercises, setExercises,inputText}) => {\n  \n    var [selectedExercise, setSelectedExercise] = useState([]);\n    const [selectedExerciseList, setSelectedExerciseList] = useState(null);\n    const convertToArray = (obj) => {\n        return Object.keys(obj).map((key) => {\n            return { id: key, name: obj[key] };\n        });\n    }\n\n\n\n    const setSelectedExersiceHandler = (event) => {\n\n        selectedExercise = convertToArray(E1[event.target.value]);\n        console.log(selectedExercise);\n        setSelectedExerciseList(\n            selectedExercise.length > 0\n            && selectedExercise.map((item, i) => {\n            return (\n                <option key={i} value={item.id}>{item.name}</option>\n            )\n        }, this));\n        console.log(selectedExerciseList);\n    }\n    \n\n    const inputTextHandler = (e) =>{\n        setInputText(e.target.value);\n    };\n\n    const sumbitExerciseHandler = (e) => {\n        e.preventDefault();\n        setExercises([...Exercises,\n            {text: inputText,completed : false, id: Math.random()*1000}]);\n        setInputText(\"\");\n    };\n\n   \n    return(\n        <form>\n                 <button onClick={sumbitExerciseHandler} className=\"exercise-button\" type=\"submit\">\n                <i className=\"fas fa-plus-square\"></i>\n            </button>         \n            <div className=\"select\">\n                <select name=\"custom\" className=\"filter-exercises\" onChange={inputTextHandler}>\n                    {selectedExerciseList}\n                </select>\n            </div>\n            <div className=\"select\">\n                <select onChange={setSelectedExersiceHandler} name=\"exercises\" className=\"filter-exercises\">\n                    {/* <option value=\"All\">All</option> */}\n                    <option value=\"Back\">Back exercises</option>\n                    <option value=\"Legs\">Legs exercises</option>\n                    <option value=\"Abs\">Abs exercises</option>\n                    <option value=\"Shoulders\">Shoulders exercises</option>\n                    <option value=\"FullBody\">FullBody exercises</option>\n                    <option value=\"Chest\">Chest exercises</option>\n                </select>\n            </div>  \n        </form> \n    );\n};\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}