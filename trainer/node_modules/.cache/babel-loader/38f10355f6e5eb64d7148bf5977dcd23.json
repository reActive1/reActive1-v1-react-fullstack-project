{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ChooseTotalTime.js\";\nimport React from \"react\";\nimport \"./CssComponents/ChooseTotalTime.css\";\nimport { NavLink } from 'react-router-dom';\nimport { Button } from \"semantic-ui-react\";\nimport { Prompt } from 'react-router-dom';\n\nclass ChooseTotalTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTrainingTime = trainingtime => {\n      this.setState({\n        trainingtime: trainingtime * 60 * 1000,\n        formChanged: true\n      });\n    };\n\n    this.updateRestTime = restTime => {\n      this.setState({\n        restTime: restTime,\n        formChanged: true\n      });\n    };\n\n    this.state = {\n      trainingtime: 0,\n      restTime: 0,\n      formChanged: false\n    };\n    this.updateTrainingTime = this.updateTrainingTime.bind(this);\n    this.updateRestTime = this.updateRestTime.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('beforeunload', this.beforeunload.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.beforeunload.bind(this));\n  }\n\n  beforeunload(e) {\n    if (this.state.trainingtime !== 0 || this.state.restTime !== 0) {\n      e.preventDefault();\n      e.returnValue = \"\";\n    }\n  }\n\n  render() {\n    if (this.state.trainingtime === 0 || this.state.restTime === 0) {\n      const {\n        formChanged\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Prompt, {\n          when: formChanged,\n          message: \"Are you sure you wanna do that?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TrainingTimeSelection\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Select training time (in minutes):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"yellow\",\n              onClick: () => this.updateTrainingTime(20),\n              children: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"orange\",\n              onClick: () => this.updateTrainingTime(30),\n              children: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"red\",\n              onClick: () => this.updateTrainingTime(40),\n              children: \"40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RestTimeSelection\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Select rest time (in seconds):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"DeepSkyBlue\",\n              onClick: () => this.updateRestTime(20),\n              children: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"Blue \",\n              onClick: () => this.updateRestTime(30),\n              children: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"DarkBlue\",\n              onClick: () => this.updateRestTime(40),\n              children: \"40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), this.state.trainingtime !== 0 && this.state.restTime !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContinueLink\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: {\n              pathname: `/ExerciseForm/${this.state.trainingtime}/${this.state.restTime}`\n            },\n            children: \"Continue to choose exercises\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default ChooseTotalTime;","map":{"version":3,"sources":["/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ChooseTotalTime.js"],"names":["React","NavLink","Button","Prompt","ChooseTotalTime","Component","constructor","props","updateTrainingTime","trainingtime","setState","formChanged","updateRestTime","restTime","state","bind","componentDidMount","window","addEventListener","beforeunload","componentWillUnmount","removeEventListener","e","preventDefault","returnValue","render","pathname"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./CssComponents/ChooseTotalTime.css\";\nimport {NavLink} from 'react-router-dom';\nimport { Button } from \"semantic-ui-react\";\nimport {Prompt } from 'react-router-dom';\n\nclass ChooseTotalTime extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      trainingtime: 0,\n      restTime: 0,\n      formChanged: false };\n    this.updateTrainingTime = this.updateTrainingTime.bind(this);\n    this.updateRestTime = this.updateRestTime.bind(this);\n  }\n\n\n  updateTrainingTime = (trainingtime) => {\n    this.setState({\n      trainingtime: trainingtime * 60 * 1000,\n      formChanged: true\n    })\n  };\n\n  updateRestTime = (restTime) => {\n      this.setState({\n      restTime: restTime,\n      formChanged: true\n      })\n    };\n    \n    componentDidMount() {\n      window.addEventListener('beforeunload', this.beforeunload.bind(this));\n    }\n  \n    componentWillUnmount() {\n      window.removeEventListener('beforeunload', this.beforeunload.bind(this));\n    }\n  \n    beforeunload(e) {\n      if (this.state.trainingtime !== 0 || this.state.restTime !== 0) {\n        e.preventDefault();\n        e.returnValue = \"\";\n      }\n    }\n\n\n  render() {\n    if ((this.state.trainingtime === 0) || (this.state.restTime === 0)) {\n      const {formChanged} = this.state;\n\n      return (\n        <div>\n        <Prompt when={formChanged} message=\"Are you sure you wanna do that?\" /> \n        <div className=\"TrainingTimeSelection\">\n          <h1>Select training time (in minutes):</h1>\n          <Button.Group>\n            <Button className=\"yellow\" onClick={() =>  this.updateTrainingTime(20)}>20</Button>\n            <Button.Or />\n            <Button className=\"orange\" onClick={() => this.updateTrainingTime(30)}>30</Button>\n            <Button.Or />\n            <Button className=\"red\" onClick={() => this.updateTrainingTime(40)}>40</Button>\n          </Button.Group>\n        </div>\n        <div className=\"RestTimeSelection\">\n          <h1>Select rest time (in seconds):</h1>\n          <Button.Group>\n            <Button className=\"DeepSkyBlue\" onClick={() =>  this.updateRestTime(20)}>20</Button>\n            <Button.Or />\n            <Button className=\"Blue \" onClick={() => this.updateRestTime(30)}>30</Button>\n            <Button.Or />\n            <Button className=\"DarkBlue\" onClick={() => this.updateRestTime(40)}>40</Button>\n          </Button.Group>\n        </div>\n        {((this.state.trainingtime !== 0) && (this.state.restTime !== 0)) ? (\n          <div className=\"ContinueLink\">\n            <NavLink to = {{\n            pathname: `/ExerciseForm/${this.state.trainingtime}/${this.state.restTime}`\n                      }}>\n                  Continue to choose exercises\n            </NavLink>\n          </div>   \n        ) : (\n              <div></div>\n        )}\n      </div>\n    );\n  }\n}\n}\n\nexport default ChooseTotalTime;"]},"metadata":{},"sourceType":"module"}