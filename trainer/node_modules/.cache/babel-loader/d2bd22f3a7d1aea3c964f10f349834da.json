{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Exercises as E1 } from \"../Common/Enums\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Dropdown } from 'semantic-ui-react';\nimport { getRandomExercise } from './RandomExercise';\n\nconst Form = ({\n  setInputText,\n  Exercises,\n  setExercises,\n  inputText\n}) => {\n  _s();\n\n  var [selectedExercise, setSelectedExercise] = useState([]);\n  var [selectedRandom, setRandomExercise] = useState(\"\");\n  const [selectedExerciseList, setSelectedExerciseList] = useState(null);\n\n  const convertToArray = obj => {\n    return Object.keys(obj).map(key => {\n      return {\n        id: key,\n        name: obj[key]\n      };\n    });\n  };\n\n  const setSelectedExersiceHandler = event => {\n    selectedExercise = convertToArray(E1[event.target.value]);\n    setSelectedExerciseList(selectedExercise.length > 0 && selectedExercise.map((item, i) => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: item.id,\n        children: item.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    }, this));\n  };\n\n  const randomFunctionHandler = e => {\n    e.preventDefault();\n    /* First way to show*/\n    //  setRandomExercise(selectedRandom = getRandomExercise(getRandomExercise(E1))); \n\n    setRandomExercise(selectedRandom = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: getRandomExercise(getRandomExercise(E1))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this);\n    });\n  };\n\n  const inputTextHandler = e => {\n    setInputText(e.target.value);\n  };\n\n  const sumbitExerciseHandler = e => {\n    e.preventDefault();\n    setExercises([...Exercises, {\n      text: inputText,\n      completed: false,\n      id: Math.random() * 1000\n    }]);\n    setInputText(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: randomFunctionHandler,\n        className: \"random-exercise-button\",\n        children: \" Start random exercise!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sumbitExerciseHandler,\n      className: \"exercise-button\",\n      type: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-plus-square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"custom\",\n        className: \"filter-exercises\",\n        onChange: inputTextHandler,\n        children: selectedExerciseList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: setSelectedExersiceHandler,\n        name: \"exercises\",\n        className: \"filter-exercises\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Back\",\n          children: \"Back exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Legs\",\n          children: \"Legs exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Abs\",\n          children: \"Abs exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Shoulders\",\n          children: \"Shoulders exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FullBody\",\n          children: \"FullBody exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Chest\",\n          children: \"Chest exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), selectedRandom]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Form, \"FGVnN8SXdSAF+GfozK+kZ5CimPI=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/Form.js"],"names":["React","useState","Exercises","E1","Dropdown","getRandomExercise","Form","setInputText","setExercises","inputText","selectedExercise","setSelectedExercise","selectedRandom","setRandomExercise","selectedExerciseList","setSelectedExerciseList","convertToArray","obj","Object","keys","map","key","id","name","setSelectedExersiceHandler","event","target","value","length","item","i","randomFunctionHandler","e","preventDefault","inputTextHandler","sumbitExerciseHandler","text","completed","Math","random"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Exercises as E1 } from \"../Common/Enums\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Dropdown } from 'semantic-ui-react'\nimport {getRandomExercise} from './RandomExercise'\n\nconst Form = ({setInputText,Exercises, setExercises,inputText}) => {\n    var [selectedExercise, setSelectedExercise] = useState([]);\n    var [selectedRandom, setRandomExercise] = useState(\"\");\n    const [selectedExerciseList, setSelectedExerciseList] = useState(null);\n    const convertToArray = (obj) => {\n        return Object.keys(obj).map((key) => {\n            return { id: key, name: obj[key] };\n        });\n    }\n\n\n\n    const setSelectedExersiceHandler = (event) => {\n        selectedExercise = convertToArray(E1[event.target.value]);\n        setSelectedExerciseList(selectedExercise.length > 0 && selectedExercise.map((item, i) => {\n            return (\n                <option key={i} value={item.id}>{item.name}</option>\n            )\n        }, this));\n    }\n    \n    const randomFunctionHandler = (e) => {\n        e.preventDefault();\n      /* First way to show*/\n      //  setRandomExercise(selectedRandom = getRandomExercise(getRandomExercise(E1))); \n        setRandomExercise(selectedRandom = () => {\n            return(\n                <div>\n                    {getRandomExercise(getRandomExercise(E1))}\n                </div>\n            )\n        });\n    }\n    const inputTextHandler = (e) =>{\n        setInputText(e.target.value);\n    }\n\n    const sumbitExerciseHandler = (e) => {\n        e.preventDefault();\n        setExercises([...Exercises,\n            {text: inputText,completed : false, id: Math.random()*1000}]);\n        setInputText(\"\");\n    }\n        return(\n            <form>\n                <div><button onClick={randomFunctionHandler} className=\"random-exercise-button\"> Start random exercise!</button></div>\n                <button onClick={sumbitExerciseHandler} className=\"exercise-button\" type=\"submit\">\n                    <i className=\"fas fa-plus-square\"></i>\n                </button>         \n                <div className=\"select\">\n                    <select name=\"custom\" className=\"filter-exercises\" onChange={inputTextHandler}>\n                        {selectedExerciseList}\n                    </select>\n                </div>\n                <div className=\"select\">\n                    <select onChange={setSelectedExersiceHandler} name=\"exercises\" className=\"filter-exercises\">\n                        {/* <option value=\"All\">All</option> */}\n                        <option value=\"Back\">Back exercises</option>\n                        <option value=\"Legs\">Legs exercises</option>\n                        <option value=\"Abs\">Abs exercises</option>\n                        <option value=\"Shoulders\">Shoulders exercises</option>\n                        <option value=\"FullBody\">FullBody exercises</option>\n                        <option value=\"Chest\">Chest exercises</option>\n                    </select>\n                </div>  \n                {selectedRandom}\n            </form> \n        );\n}\n\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}