{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/Timer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./CssComponents/Timer.css\";\nimport Countdown, { zeroPad } from \"react-countdown\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\n\nfunction Timer(props) {\n  _s();\n\n  let countdownApi = null;\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [time, setTime] = useState(Date.now() + props.time);\n  const [duration, setDuration] = useState(props.time / 60 / 1000);\n\n  const setRef = countdown => {\n    if (countdown) {\n      countdownApi = countdown.getApi();\n    }\n  };\n\n  const handlePauseClick = () => {\n    console.log(countdownApi.time);\n    countdownApi && countdownApi.pause();\n  };\n\n  const handleStartClick = () => {\n    console.log(countdownApi.time);\n    countdownApi && countdownApi.start();\n  }; //total time countdown settings\n\n\n  const renderer = ({\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"You rock! Training session ended!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [zeroPad(minutes), \":\", zeroPad(seconds)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 20\n      }, this);\n    }\n  }; //exercise time countdown settings\n\n\n  const renderTime = ({\n    remainingTime\n  }) => {\n    console.log(\"rematining time\", remainingTime);\n\n    if (remainingTime === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer\",\n        children: \"Great!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: \"Remaining\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"value\",\n        children: remainingTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: \"seconds\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timers\",\n    children: [console.log(\"duration: \", duration), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(Countdown, {\n        date: time,\n        renderer: renderer,\n        ref: setRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n        isPlaying: isPlaying,\n        duration: duration,\n        colors: [['#004777', 0.33], ['#F7B801', 0.33], ['#A30000', 0.33]],\n        children: renderTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsPlaying(false);\n          handlePauseClick();\n        },\n        children: \"pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setIsPlaying(true);\n          handleStartClick();\n        },\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setTime(Date.now() + props.time);\n          renderTime();\n        },\n        children: \"restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Timer, \"tl2UNaqrg1u0peRZ5pofC+4vxX8=\");\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"sources":["/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/Timer.js"],"names":["React","useState","Countdown","zeroPad","CountdownCircleTimer","Timer","props","countdownApi","isPlaying","setIsPlaying","time","setTime","Date","now","duration","setDuration","setRef","countdown","getApi","handlePauseClick","console","log","pause","handleStartClick","start","renderer","hours","minutes","seconds","completed","renderTime","remainingTime"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport \"./CssComponents/Timer.css\";\nimport Countdown, {zeroPad} from \"react-countdown\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\n\nfunction Timer(props) {\n  let countdownApi = null;\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [time, setTime] = useState(Date.now()+props.time);\n  const [duration, setDuration] = useState(props.time/60/1000);\n\n  const setRef = countdown => {\n    if (countdown) {\n      countdownApi = countdown.getApi();\n    }\n  };\n\n    const handlePauseClick = () => {\n      console.log(countdownApi.time)\n      countdownApi && countdownApi.pause();\n    };\n\n    const handleStartClick = () => {\n      console.log(countdownApi.time)\n      countdownApi && countdownApi.start();\n    };\n\n    //total time countdown settings\n    const renderer = ({ hours, minutes, seconds, completed }) => {\n        if (completed) {\n            return <span>You rock! Training session ended!</span>;\n        } else {\n            return <span>{zeroPad(minutes)}:{zeroPad(seconds)}</span>\n        }\n    }\n\n    //exercise time countdown settings\n    const renderTime = ({ remainingTime }) => {\n      console.log(\"rematining time\", remainingTime)\n      if (remainingTime === 0) {\n        return <div className=\"timer\">Great!</div>;\n      }\n      return (\n        <div className=\"timer\"> \n          <div className=\"text\">Remaining</div>\n          <div className=\"value\">{remainingTime}</div>\n          <div className=\"text\">seconds</div>\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"timers\">\n        {console.log(\"duration: \", duration)}\n        <h1><Countdown date={time} renderer={renderer} ref={setRef} /></h1>\n        <div className=\"timer-wrapper\">\n        <CountdownCircleTimer\n          isPlaying = {isPlaying}\n          duration={duration}\n          colors={[\n            ['#004777', 0.33],\n            ['#F7B801', 0.33],\n            ['#A30000', 0.33],\n          ]\n        }\n        >\n          {renderTime}\n        </CountdownCircleTimer>\n        <button onClick = {() => {setIsPlaying(false); handlePauseClick();}}>\n          pause\n        </button>\n        <button onClick = {() => {setIsPlaying(true); handleStartClick();}}>\n          start\n        </button>\n        <button onClick = {() => { setTime(Date.now()+props.time); renderTime();}}>\n          restart\n        </button>\n        </div>\n      </div>\n    )\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}