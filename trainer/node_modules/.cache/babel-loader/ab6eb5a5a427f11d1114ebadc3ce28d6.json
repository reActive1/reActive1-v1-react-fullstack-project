{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ExerciseForm.js\";\nimport React, { useState } from 'react';\nimport { Exercises } from \"../Common/Enums\";\nimport \"./CssComponents/ExerciseForm.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Dropdown, Label, Form, Input } from 'semantic-ui-react';\nimport { getRandomExercise } from './RandomExercise';\nimport { timeOptions } from \"../Common/Enums\";\nimport ExerciseList from './ExerciseList';\nimport { Container, Row, Col } from \"shards-react\";\n\nclass ExerciseForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRand = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: getRandomExercise(getRandomExercise(Exercises))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.randomFunctionHandler = e => {\n      e.preventDefault();\n      console.log(getRandomExercise(getRandomExercise(Exercises)));\n      let x = getRandomExercise(getRandomExercise(Exercises));\n      this.setState({\n        name: x\n      });\n    };\n\n    this.filterExercise = (e, data) => {\n      console.log(e.value);\n      var current_dropdown = [];\n\n      for (var key in this.state.current_exercises_key[this.state.myArray[e.value]]) {\n        Object.keys(this.state.current_exercises_key[this.state.myArray[e.value]][key]).forEach(item => {\n          current_dropdown.push({\n            key: item,\n            text: item,\n            value: item\n          });\n        });\n      }\n\n      this.setState({\n        current_exercise: current_dropdown\n      });\n    };\n\n    this.sumbitExerciseHandler = e => {\n      e.preventDefault();\n      let array = this.state.choosenExercisesArray;\n      let id = this.state.id;\n      let obj = {\n        name: this.state.name,\n        time: this.state.time,\n        repeats: this.state.repeats,\n        restTime: this.state.restTime,\n        id: id\n      };\n      array.push(obj);\n      id++;\n      this.setState({\n        id: id,\n        choosenExercisesArray: array\n      });\n    };\n\n    this.updateExercisesArrayHandler = newExercisesArray => {\n      this.setState({\n        choosenExercisesArray: newExercisesArray\n      });\n    };\n\n    var ex = Object.keys(Exercises).map(key => {\n      var obj = {};\n      obj[key] = Exercises[key];\n      return obj;\n    });\n    var res = [];\n\n    for (var i in ex) {\n      for (var _key in ex[i]) {\n        Object.values(ex[i][_key]).forEach(item => {\n          res.push({\n            key: item,\n            text: item,\n            value: item\n          });\n        });\n      }\n    }\n\n    var Types_of_exercises = [{\n      key: 'Back exercises',\n      text: 'Back exercises',\n      value: 'Back exercises'\n    }, {\n      key: 'Legs exercises',\n      text: 'Legs exercises',\n      value: 'Legs exercises'\n    }, {\n      key: 'Abs exercisesbs',\n      text: 'Abs exercisesbs',\n      value: 'Abs exercisesbs'\n    }, {\n      key: 'Shoulders exercises',\n      text: 'Shoulders exercises',\n      value: 'Shoulders exercises'\n    }, {\n      key: 'FullBody exercises',\n      text: 'FullBody exercises',\n      value: 'FullBody exercises'\n    }];\n    var myArray = {\n      \"Total\": 10,\n      \"Back exercises\": 0,\n      \"Legs exercises\": 1,\n      \"Abs exercisesbs\": 3,\n      \"Shoulders exercises\": 4,\n      \"FullBody exercises\": 5,\n      \"Chest exercises\": 6\n    };\n    this.state = {\n      current_exercise: res,\n      current_exercises_key: ex,\n      myArray: myArray,\n      Types_of_exercises: Types_of_exercises,\n      exercise_item: [],\n      choosenExercisesArray: [],\n      type: \"Back exercises\",\n      name: \"Supermans\",\n      time: \"\",\n      repeats: 1,\n      restTime: 10,\n      id: 1\n    };\n    this.randomFunctionHandler = this.randomFunctionHandler.bind(this);\n    this.updateExercisesArrayHandler = this.updateExercisesArrayHandler.bind(this);\n  }\n\n  render() {\n    let {\n      choosenExercisesArray\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"main-content-container px-4\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"page-header py-4 my-4\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Hi you! choose your exercise:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"formRow\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: this.randomFunctionHandler,\n                  className: \"random-exercise-button\",\n                  children: \" Start random exercise!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                pointing: \"right\",\n                children: \"Select exrecise type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                fluid: true,\n                selection: true //value={this.state.type}\n                ,\n                onChange: (event, data) => {\n                  {\n                    this.filterExercise(data);\n                  }\n                },\n                options: this.state.Types_of_exercises\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                pointing: \"right\",\n                children: \"Select exrecise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                fluid: true,\n                selection: true,\n                onChange: (event, data) => {\n                  this.setState({\n                    name: data.value\n                  });\n                },\n                options: this.state.current_exercise\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                pointing: \"right\",\n                children: \"Select time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                fluid: true,\n                selection: true,\n                onChange: (event, data) => {\n                  this.setState({\n                    time: data.value\n                  });\n                },\n                options: timeOptions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Label, {\n                pointing: \"right\",\n                children: \"Select repeats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                type: \"number\",\n                onChange: (event, data) => {\n                  this.setState({\n                    repeats: data.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.sumbitExerciseHandler,\n                className: \"exercise-button\",\n                type: \"submit\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-plus-square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(ExerciseList, {\n            choosenExercisesArray: choosenExercisesArray,\n            updateExercisesArray: this.updateExercisesArrayHandler,\n            totalTrainingTime: this.props.match.params.trainingtime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ExerciseForm;","map":{"version":3,"sources":["/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ExerciseForm.js"],"names":["React","useState","Exercises","Dropdown","Label","Form","Input","getRandomExercise","timeOptions","ExerciseList","Container","Row","Col","ExerciseForm","Component","constructor","props","handleRand","randomFunctionHandler","e","preventDefault","console","log","x","setState","name","filterExercise","data","value","current_dropdown","key","state","current_exercises_key","myArray","Object","keys","forEach","item","push","text","current_exercise","sumbitExerciseHandler","array","choosenExercisesArray","id","obj","time","repeats","restTime","updateExercisesArrayHandler","newExercisesArray","ex","map","res","i","values","Types_of_exercises","exercise_item","type","bind","render","event","match","params","trainingtime"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Exercises} from \"../Common/Enums\";\nimport \"./CssComponents/ExerciseForm.css\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Dropdown, Label, Form ,Input } from 'semantic-ui-react';\nimport { getRandomExercise } from './RandomExercise';\nimport { timeOptions }  from \"../Common/Enums\";\nimport ExerciseList from './ExerciseList';\nimport { Container, Row, Col } from \"shards-react\";\n\n\nclass ExerciseForm extends React.Component {\n  constructor(props) {\n    super(props);\n  \n    var ex = Object.keys(Exercises).map((key)=>{\n        var obj = {};\n        obj[key] = Exercises[key];\n        \n        return obj;\n        \n            });          \n    var res = [];\n    for (var i in ex){\n        for (var key in ex[i])\n        {\n            Object.values(ex[i][key]).forEach(item =>{\n                res.push({\n                    key: item,\n                    text: item,\n                    value: item\n                });\n            }) \n        }\n    }\n\n\n\n    var Types_of_exercises = [{\n        key: 'Back exercises',\n        text: 'Back exercises',\n        value: 'Back exercises',\n      },\n      {\n        key: 'Legs exercises',\n        text: 'Legs exercises',\n        value: 'Legs exercises',\n      },\n      {\n        key: 'Abs exercisesbs',\n        text: 'Abs exercisesbs',\n        value: 'Abs exercisesbs',\n      },{\n        key: 'Shoulders exercises',\n        text: 'Shoulders exercises',\n        value: 'Shoulders exercises',\n      },\n      {\n        key: 'FullBody exercises',\n        text: 'FullBody exercises',\n        value: 'FullBody exercises',\n      },]\n      var myArray = {\"Total\":10,\"Back exercises\": 0, \"Legs exercises\": 1, \"Abs exercisesbs\": 3,\"Shoulders exercises\": 4,\"FullBody exercises\": 5, \"Chest exercises\":6};\n      this.state = {\n        current_exercise: res ,\n        current_exercises_key: ex ,\n        myArray: myArray,\n        Types_of_exercises:Types_of_exercises,\n        exercise_item : [],\n        choosenExercisesArray:[],\n        type: \"Back exercises\",\n        name: \"Supermans\",\n        time: \"\",\n        repeats: 1,\n        restTime: 10,\n        id: 1,\n      };\n\n      this.randomFunctionHandler = this.randomFunctionHandler.bind(this);\n      this.updateExercisesArrayHandler = this.updateExercisesArrayHandler.bind(this);\n\n  }\n\n\nhandleRand = () =>{\n  return(\n            <div>\n                {getRandomExercise(getRandomExercise(Exercises))}\n            </div>\n        )\n}\n\nrandomFunctionHandler = (e) => {\n    e.preventDefault();\n  console.log(getRandomExercise(getRandomExercise(Exercises)));\n  let x= getRandomExercise(getRandomExercise(Exercises))\n  this.setState({name:  x})\n}\n  \n  filterExercise = (e,data) =>{\n    console.log(e.value);\n    var current_dropdown=[];\n    for (var key in this.state.current_exercises_key[this.state.myArray[e.value]])\n    {\n        Object.keys(this.state.current_exercises_key[this.state.myArray[e.value]][key]).forEach(item =>{\n          current_dropdown.push({\n                key: item,\n                text: item,\n                value: item\n            });\n        }) \n    }\n    this.setState({current_exercise:current_dropdown})\n  }\n\n  sumbitExerciseHandler = (e) => {\n    e.preventDefault();\n    let array = this.state.choosenExercisesArray;\n    let id = this.state.id;\n    let obj = { name: this.state.name, time: this.state.time, repeats: this.state.repeats, restTime: this.state.restTime, id:id };\n    array.push(obj);\n    id ++;\n  \n    this.setState({id:id, choosenExercisesArray: array});\n\n  }\n\n  updateExercisesArrayHandler = (newExercisesArray) => {\n    this.setState({choosenExercisesArray: newExercisesArray})\n  }\n\n  render() {\n      let {choosenExercisesArray} = this.state;\n    return (\n      <Container fluid className=\"main-content-container px-4\">\n        <Row className=\"page-header py-4 my-4\">\n          <Col><h1> Hi you! choose your exercise:  </h1></Col>\n        </Row>\n         \n        <Row className=\"formRow\">\n          <Col>\n            <form>\n              <div>\n                <div>\n                  <button onClick={this.randomFunctionHandler} className=\"random-exercise-button\"> Start random exercise!</button>\n                </div>\n                <Label pointing='right'>Select exrecise type</Label>\n                <Dropdown\n                  fluid\n                  selection\n                  //value={this.state.type}\n                  onChange={(event, data) => {\n                    {this.filterExercise(data)}\n                  }}\n                  options={this.state.Types_of_exercises}\n                />\n                  <Label pointing='right'>Select exrecise</Label>\n                  <Dropdown\n                    fluid\n                    selection\n                    onChange={(event,data)=>{\n                      this.setState({name: data.value})\n                    }}\n                    options={this.state.current_exercise}\n                  />\n                <Label pointing='right'>Select time</Label>\n                <Dropdown\n                  fluid\n                  selection\n                  onChange={(event,data)=>{\n                    this.setState({time:data.value})\n                  }}\n                  options={timeOptions}\n                />\n                <Label pointing='right'>Select repeats</Label>\n                <Input \n                  type=\"number\"\n                  onChange={(event,data)=>{\n                    this.setState({repeats:data.value})\n                  }}\n                />\n                <button onClick={this.sumbitExerciseHandler} className=\"exercise-button\" type=\"submit\">\n                  <i className=\"fas fa-plus-square\"></i>\n                </button>         \n              </div>\n            </form> \n          </Col>\n          <Col>\n            <ExerciseList\n              choosenExercisesArray={choosenExercisesArray} \n              updateExercisesArray={this.updateExercisesArrayHandler} \n              totalTrainingTime={this.props.match.params.trainingtime}\n              />\n          </Col>\n        </Row>\n     </Container>\n    );\n  }\n}\n\nexport default ExerciseForm;"]},"metadata":{},"sourceType":"module"}