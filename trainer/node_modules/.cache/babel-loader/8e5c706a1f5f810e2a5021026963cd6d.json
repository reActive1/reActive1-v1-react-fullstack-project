{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ChooseTotalTime.js\";\nimport React from \"react\";\nimport \"./CssComponents/ChooseTotalTime.css\";\nimport { NavLink } from 'react-router-dom';\nimport { Button as ButtonSemanticUI } from \"semantic-ui-react\";\nimport { Prompt } from 'react-router-dom';\n\nclass ChooseTotalTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTrainingTime = trainingtime => {\n      this.setState({\n        trainingtime: trainingtime * 60 * 1000,\n        formChanged: true\n      });\n    };\n\n    this.updateRestTime = restTime => {\n      this.setState({\n        restTime: restTime,\n        formChanged: true\n      });\n    };\n\n    this.state = {\n      trainingtime: 0,\n      restTime: 0,\n      formChanged: false,\n      images: [{\n        name: \"BirdDog\",\n        time: 5000\n      }, {\n        name: \"Superman\",\n        time: 10000\n      }, {\n        name: \"CatCow\",\n        time: 40000\n      }, {\n        name: \"FinalTraining\",\n        time: 5000\n      }]\n    };\n    this.updateTrainingTime = this.updateTrainingTime.bind(this);\n    this.updateRestTime = this.updateRestTime.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('beforeunload', this.beforeunload.bind(this));\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.beforeunload.bind(this));\n  }\n\n  beforeunload(e) {\n    if (this.state.trainingtime !== 0 || this.state.restTime !== 0) {\n      e.preventDefault();\n      e.returnValue = \"\";\n    }\n  }\n\n  render() {\n    const {\n      formChanged\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TrainingTimeSelection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Select training time (in minutes):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonSemanticUI.Group, {\n          children: [/*#__PURE__*/_jsxDEV(ButtonSemanticUI, {\n            className: \"yellow\",\n            onClick: () => this.updateTrainingTime(20),\n            children: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSemanticUI.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSemanticUI, {\n            className: \"orange\",\n            onClick: () => this.updateTrainingTime(30),\n            children: \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSemanticUI.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSemanticUI, {\n            className: \"red\",\n            onClick: () => this.updateTrainingTime(40),\n            children: \"40\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RestTimeSelection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Select rest time (in seconds):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonSemanticUI.Group, {\n          children: [/*#__PURE__*/_jsxDEV(ButtonSemanticUI, {\n            className: \"DeepSkyBlue\",\n            onClick: () => this.updateRestTime(20),\n            children: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSemanticUI.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSemanticUI, {\n            className: \"Blue \",\n            onClick: () => this.updateRestTime(30),\n            children: \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSemanticUI.Or, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ButtonSemanticUI, {\n            className: \"DarkBlue\",\n            onClick: () => this.updateRestTime(40),\n            children: \"40\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), this.state.trainingtime !== 0 && this.state.restTime !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContinueLinkChooseExercises\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"btn btn-outline-primary\",\n            to: {\n              pathname: `/ExerciseForm/${this.state.trainingtime}/${this.state.restTime}`\n            },\n            children: \"choose your exercises\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ContinueLinkRandomExercises\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"btn btn-outline-primary\",\n            to: {\n              pathname: `/Timer`,\n              state: {\n                myArrayVariableName: this.state.images\n              }\n            },\n            children: \"lucky random exercises\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }, this), this.state.trainingtime === 0 || this.state.restTime === 0 ? /*#__PURE__*/_jsxDEV(Prompt, {\n        when: formChanged,\n        message: \"Are you sure you wanna do that?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 18\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ChooseTotalTime;","map":{"version":3,"sources":["/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ChooseTotalTime.js"],"names":["React","NavLink","Button","ButtonSemanticUI","Prompt","ChooseTotalTime","Component","constructor","props","updateTrainingTime","trainingtime","setState","formChanged","updateRestTime","restTime","state","images","name","time","bind","componentDidMount","window","addEventListener","beforeunload","componentWillUnmount","removeEventListener","e","preventDefault","returnValue","render","pathname","myArrayVariableName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./CssComponents/ChooseTotalTime.css\";\nimport {NavLink} from 'react-router-dom';\nimport { Button as ButtonSemanticUI } from \"semantic-ui-react\";\nimport {Prompt } from 'react-router-dom';\n\nclass ChooseTotalTime extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trainingtime: 0,\n      restTime: 0,\n      formChanged: false,\n      images: [\n        {name: \"BirdDog\", time: 5000},\n        {name: \"Superman\", time: 10000},\n        {name: \"CatCow\", time: 40000},\n        {name: \"FinalTraining\", time: 5000}\n       ] };\n    this.updateTrainingTime = this.updateTrainingTime.bind(this);\n    this.updateRestTime = this.updateRestTime.bind(this);\n  }\n\n\n  updateTrainingTime = (trainingtime) => {\n    this.setState({\n      trainingtime: trainingtime * 60 * 1000,\n      formChanged: true\n    })\n  };\n\n  updateRestTime = (restTime) => {\n      this.setState({\n      restTime: restTime,\n      formChanged: true\n      })\n    };\n\n    componentDidMount() {\n      window.addEventListener('beforeunload', this.beforeunload.bind(this));\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('beforeunload', this.beforeunload.bind(this));\n    }\n\n    beforeunload(e) {\n      if (this.state.trainingtime !== 0 || this.state.restTime !== 0) {\n        e.preventDefault();\n        e.returnValue = \"\";\n      }\n    }\n\n\n  render() {\n      const {formChanged} = this.state;\n\n      return (\n        <div>\n        <div className=\"TrainingTimeSelection\">\n          <h1>Select training time (in minutes):</h1>\n          <ButtonSemanticUI.Group>\n            <ButtonSemanticUI className=\"yellow\" onClick={() =>  this.updateTrainingTime(20)}>20</ButtonSemanticUI>\n            <ButtonSemanticUI.Or />\n            <ButtonSemanticUI className=\"orange\" onClick={() => this.updateTrainingTime(30)}>30</ButtonSemanticUI>\n            <ButtonSemanticUI.Or />\n            <ButtonSemanticUI className=\"red\" onClick={() => this.updateTrainingTime(40)}>40</ButtonSemanticUI>\n          </ButtonSemanticUI.Group>\n        </div>\n        <div className=\"RestTimeSelection\">\n          <h1>Select rest time (in seconds):</h1>\n          <ButtonSemanticUI.Group>\n            <ButtonSemanticUI className=\"DeepSkyBlue\" onClick={() =>  this.updateRestTime(20)}>20</ButtonSemanticUI>\n            <ButtonSemanticUI.Or />\n            <ButtonSemanticUI className=\"Blue \" onClick={() => this.updateRestTime(30)}>30</ButtonSemanticUI>\n            <ButtonSemanticUI.Or />\n            <ButtonSemanticUI className=\"DarkBlue\" onClick={() => this.updateRestTime(40)}>40</ButtonSemanticUI>\n          </ButtonSemanticUI.Group>\n        </div>\n        {((this.state.trainingtime !== 0) && (this.state.restTime !== 0)) ? (\n        <div className=\"Wrapper\">\n        <div className=\"ContinueLinkChooseExercises\">\n           <NavLink className=\"btn btn-outline-primary\" to = {{\n                       pathname: `/ExerciseForm/${this.state.trainingtime}/${this.state.restTime}`\n                                 }}>\n                                      choose your exercises\n                       </NavLink>\n            </div>\n            <div className=\"ContinueLinkRandomExercises\">\n                 <NavLink className=\"btn btn-outline-primary\" to = {{\n                      pathname: `/Timer`,\n                      state: { myArrayVariableName: this.state.images}\n                                }}>\n                                    lucky random exercises\n                      </NavLink>\n            </div>\n         </div>\n        ) : (\n              <div></div>\n        )}\n       {  ((this.state.trainingtime === 0) || (this.state.restTime === 0)) ? \n                 <Prompt when={formChanged} message=\"Are you sure you wanna do that?\" /> : \"\"\n       } \n   \n      </div>\n    );\n  }\n}\n\n\nexport default ChooseTotalTime;"]},"metadata":{},"sourceType":"module"}