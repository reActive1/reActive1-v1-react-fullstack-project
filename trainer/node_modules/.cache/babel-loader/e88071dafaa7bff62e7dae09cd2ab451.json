{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ChooseTotalTime.js\";\nimport React from \"react\";\nimport \"./CssComponents/ChooseTotalTime.css\";\nimport { NavLink } from 'react-router-dom';\nimport { Button } from \"semantic-ui-react\";\nimport { Prompt } from 'react-router-dom';\n\nclass ChooseTotalTime extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateTrainingTime = trainingtime => {\n      this.setState({\n        trainingtime: trainingtime * 60 * 1000\n      });\n    };\n\n    this.updateRestTime = restTime => {\n      this.setState({\n        restTime: restTime\n      });\n    };\n\n    this.state = {\n      trainingtime: 0,\n      restTime: 0,\n      formChanged: false\n    };\n    this.updateTrainingTime = this.updateTrainingTime.bind(this);\n    this.updateRestTime = this.updateRestTime.bind(this);\n  }\n\n  handleChange(e) {\n    // const { trainingtime, restTime } = this.state;\n    this.setState({\n      // trainingtime: trainingtime,\n      // restTime:restTime, \n      formChanged: true\n    });\n  } // componentDidMount() {\n  //   window.addEventListener('beforeunload', this.beforeunload.bind(this));\n  // }\n  // componentWillUnmount() {\n  //   window.removeEventListener('beforeunload', this.beforeunload.bind(this));\n  // }\n  // beforeunload(e) {\n  //   if (this.state.trainingtime !== 0 || this.state.restTime!==0) {\n  //     e.preventDefault();\n  //     e.returnValue = \"sfgsdfg\";\n  //     return \"sure?!?!?!?!\"\n  //   }\n  // }\n\n\n  render() {\n    if (this.state.trainingtime == 0 || this.state.restTime == 0) {\n      const {\n        formChanged\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(\"formChanged:\", formChanged), /*#__PURE__*/_jsxDEV(Prompt, {\n          when: formChanged,\n          message: \"Are you sure you wanna do that?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TrainingTimeSelection\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Select training time (in minutes):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"yellow\",\n              onClick: () => this.updateTrainingTime(20),\n              children: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"orange\",\n              onClick: () => this.updateTrainingTime(30),\n              children: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"red\",\n              onClick: () => this.updateTrainingTime(40),\n              children: \"40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RestTimeSelection\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Select rest time (in seconds):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"DeepSkyBlue\",\n              onClick: () => this.updateRestTime(20),\n              children: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"Blue \",\n              onClick: () => this.updateRestTime(30),\n              children: \"30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button.Or, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"DarkBlue\",\n              onClick: () => this.updateRestTime(40),\n              children: \"40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ContinueLink\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: {\n            pathname: `/ExerciseForm/${this.state.trainingtime}/${this.state.restTime}`\n          },\n          children: \"Continue to choose exercises\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport default ChooseTotalTime;","map":{"version":3,"sources":["/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ChooseTotalTime.js"],"names":["React","NavLink","Button","Prompt","ChooseTotalTime","Component","constructor","props","updateTrainingTime","trainingtime","setState","updateRestTime","restTime","state","formChanged","bind","handleChange","e","render","console","log","pathname"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qCAAP;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAAQC,MAAR,QAAsB,kBAAtB;;AAEA,MAAMC,eAAN,SAA8BJ,KAAK,CAACK,SAApC,CAA8C;AAC5CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,kBAXmB,GAWGC,YAAD,IAAkB;AACrC,WAAKC,QAAL,CAAc;AACZD,QAAAA,YAAY,EAAEA,YAAY,GAAG,EAAf,GAAoB;AADtB,OAAd;AAED,KAdkB;;AAAA,SAgBnBE,cAhBmB,GAgBDC,QAAD,IAAc;AAC3B,WAAKF,QAAL,CAAc;AACdE,QAAAA,QAAQ,EAAEA;AADI,OAAd;AAGD,KApBgB;;AAEjB,SAAKC,KAAL,GAAa;AACXJ,MAAAA,YAAY,EAAE,CADH;AAEXG,MAAAA,QAAQ,EAAE,CAFC;AAGXE,MAAAA,WAAW,EAAE;AAHF,KAAb;AAIA,SAAKN,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBO,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKJ,cAAL,GAAsB,KAAKA,cAAL,CAAoBI,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAcCC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd;AAEA,SAAKP,QAAL,CAAc;AACZ;AACA;AACAI,MAAAA,WAAW,EAAE;AAHD,KAAd;AAKD,GA/ByC,CAkC5C;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAI,EAAAA,MAAM,GAAG;AACN,QAAK,KAAKL,KAAL,CAAWJ,YAAX,IAA2B,CAA5B,IAAmC,KAAKI,KAAL,CAAWD,QAAX,IAAuB,CAA9D,EAAkE;AACjE,YAAM;AAACE,QAAAA;AAAD,UAAgB,KAAKD,KAA3B;AAEA,0BACE;AAAA,mBACGM,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA6BN,WAA7B,CADH,eAED,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAEA,WAAd;AAA2B,UAAA,OAAO,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFC,eAIA;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD,CAAQ,KAAR;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,QAAlB;AAA2B,cAAA,OAAO,EAAE,MAAO,KAAKN,kBAAL,CAAwB,EAAxB,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,QAAlB;AAA2B,cAAA,OAAO,EAAE,MAAM,KAAKA,kBAAL,CAAwB,EAAxB,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,KAAlB;AAAwB,cAAA,OAAO,EAAE,MAAM,KAAKA,kBAAL,CAAwB,EAAxB,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,eAcA;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,kCACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADV,eAEU,QAAC,MAAD,CAAQ,KAAR;AAAA,oCACE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,aAAlB;AAAgC,cAAA,OAAO,EAAE,MAAO,KAAKG,cAAL,CAAoB,EAApB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,OAAlB;AAA0B,cAAA,OAAO,EAAE,MAAM,KAAKA,cAAL,CAAoB,EAApB,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,MAAD,CAAQ,EAAR;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAC,UAAlB;AAA6B,cAAA,OAAO,EAAE,MAAM,KAAKA,cAAL,CAAoB,EAApB,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AA2BC,KA9BF,MA8BQ;AACL,0BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACG,QAAC,OAAD;AAAS,UAAA,EAAE,EAAI;AACdU,YAAAA,QAAQ,EAAG,iBAAgB,KAAKR,KAAL,CAAWJ,YAAa,IAAG,KAAKI,KAAL,CAAWD,QAAS;AAD5D,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AASC;AACH;;AA5FwC;;AA+F9C,eAAeR,eAAf","sourcesContent":["import React from \"react\";\nimport \"./CssComponents/ChooseTotalTime.css\";\nimport {NavLink} from 'react-router-dom';\nimport { Button } from \"semantic-ui-react\";\nimport {Prompt } from 'react-router-dom';\n\nclass ChooseTotalTime extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      trainingtime: 0,\n      restTime: 0,\n      formChanged: false };\n    this.updateTrainingTime = this.updateTrainingTime.bind(this);\n    this.updateRestTime = this.updateRestTime.bind(this);\n  }\n\n\n  updateTrainingTime = (trainingtime) => {\n    this.setState({\n      trainingtime: trainingtime * 60 * 1000})\n  };\n\n  updateRestTime = (restTime) => {\n      this.setState({\n      restTime: restTime\n      })\n    };\n\n    handleChange(e) {\n      // const { trainingtime, restTime } = this.state;\n    \n      this.setState({\n        // trainingtime: trainingtime,\n        // restTime:restTime, \n        formChanged: true,\n      });\n    }\n    \n\n  // componentDidMount() {\n  //   window.addEventListener('beforeunload', this.beforeunload.bind(this));\n  // }\n\n  // componentWillUnmount() {\n  //   window.removeEventListener('beforeunload', this.beforeunload.bind(this));\n  // }\n\n  // beforeunload(e) {\n  //   if (this.state.trainingtime !== 0 || this.state.restTime!==0) {\n  //     e.preventDefault();\n  //     e.returnValue = \"sfgsdfg\";\n  //     return \"sure?!?!?!?!\"\n  //   }\n  // }\n\n  render() {\n     if ((this.state.trainingtime == 0) || (this.state.restTime == 0)) {\n      const {formChanged} = this.state;\n\n      return (\n        <div>\n          {console.log(\"formChanged:\" , formChanged)}\n       <Prompt when={formChanged} message=\"Are you sure you wanna do that?\" />\n\n        <div className=\"TrainingTimeSelection\">\n          <h1>Select training time (in minutes):</h1>\n          <Button.Group>\n            <Button className=\"yellow\" onClick={() =>  this.updateTrainingTime(20)}>20</Button>\n            <Button.Or />\n            <Button className=\"orange\" onClick={() => this.updateTrainingTime(30)}>30</Button>\n            <Button.Or />\n            <Button className=\"red\" onClick={() => this.updateTrainingTime(40)}>40</Button>\n          </Button.Group>\n        </div>\n        <div className=\"RestTimeSelection\">\n                  <h1>Select rest time (in seconds):</h1>\n                  <Button.Group>\n                    <Button className=\"DeepSkyBlue\" onClick={() =>  this.updateRestTime(20)}>20</Button>\n                    <Button.Or />\n                    <Button className=\"Blue \" onClick={() => this.updateRestTime(30)}>30</Button>\n                    <Button.Or />\n                    <Button className=\"DarkBlue\" onClick={() => this.updateRestTime(40)}>40</Button>\n                  </Button.Group>\n            </div>\n         </div>\n      );\n      } else {\n        return (\n          <div className=\"ContinueLink\">\n             <NavLink to = {{\n              pathname: `/ExerciseForm/${this.state.trainingtime}/${this.state.restTime}`\n                       }}>\n                    Continue to choose exercises\n               </NavLink>\n           </div>\n        )\n        }\n     }\n  }\n\nexport default ChooseTotalTime;"]},"metadata":{},"sourceType":"module"}