{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/StartExerciseList.js\";\nimport React from \"react\";\nimport \"./CssComponents/Timer.css\";\nimport BirdDog from \"./gifExercise/BirdDog.gif\";\nimport CatCow from \"./gifExercise/CatCow.gif\";\nimport Superman from \"./gifExercise/Superman.gif\";\nimport FinalTraining from \"./gifExercise/FinalTraining.png\";\nimport RestPicture from \"./gifExercise/RestPicture.jpg\";\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\n\nclass StartExerciseList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.switchImage = this.switchImage.bind(this);\n    this.state = {\n      currentImage: 0,\n      restTime: 6,\n      images: [{\n        name: BirdDog,\n        time: 7\n      }, {\n        name: Superman,\n        time: 9\n      }, {\n        name: CatCow,\n        time: 13\n      }]\n    };\n  }\n\n  switchImage() {\n    if (this.state.currentImage < this.state.images.length) {\n      this.setState({\n        currentImage: this.state.currentImage + 1\n      });\n    } else {}\n\n    return this.currentImage;\n  }\n\n  componentDidMount() {\n    setInterval(this.switchImage, this.state.images[this.state.currentImage].time * 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.currentImage < this.state.images.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-wrapper\",\n          children: /*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n            duration: this.state.images[this.state.currentImage].time,\n            onComplete: () => {\n              // do your stuff here\n              return [true, 0];\n            },\n            isPlaying: true,\n            colors: [['#004777', 0.33], ['#F7B801', 0.33], ['#A30000', 0.33]],\n            children: ({\n              remainingTime\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text\",\n                children: \"Remaining\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"value\",\n                children: remainingTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text\",\n                children: \"seconds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this)\n          }, this.state.currentImage, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slideshow-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"gifExercise\",\n            src: this.state.images[this.state.currentImage].name,\n            value: this.state.images[this.state.currentImage].time,\n            alt: \"cleaning images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"gifExercise\",\n        src: FinalTraining,\n        alt: \"end of training\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default StartExerciseList;","map":{"version":3,"sources":["/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/StartExerciseList.js"],"names":["React","BirdDog","CatCow","Superman","FinalTraining","RestPicture","CountdownCircleTimer","StartExerciseList","Component","constructor","props","switchImage","bind","state","currentImage","restTime","images","name","time","length","setState","componentDidMount","setInterval","render","remainingTime"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./CssComponents/Timer.css\";\nimport BirdDog from \"./gifExercise/BirdDog.gif\"\nimport CatCow from \"./gifExercise/CatCow.gif\"\nimport Superman from \"./gifExercise/Superman.gif\"\nimport FinalTraining from \"./gifExercise/FinalTraining.png\"\nimport RestPicture from \"./gifExercise/RestPicture.jpg\"\n\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\n\nclass StartExerciseList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.switchImage = this.switchImage.bind(this);\n     this.state = {\n      currentImage: 0,\n      restTime: 6,\n      images: [\n       {name: BirdDog, time: 7},\n       {name: Superman, time: 9},\n       {name: CatCow, time: 13}\n      ]\n    };\n  }\n\n  switchImage() {\n    if (this.state.currentImage < this.state.images.length) {\n      this.setState({\n        currentImage: this.state.currentImage + 1\n      });\n    } else {\n\n    }\n    return this.currentImage;\n  }\n\n  componentDidMount() {\n      setInterval(this.switchImage, this.state.images[this.state.currentImage].time*1000);\n  }\n\n\n  render() {\n    return (\n      <div>\n      {(this.state.currentImage < this.state.images.length) ? (\n       <div>\n       <div className=\"timer-wrapper\">\n                <CountdownCircleTimer\n                  key = {this.state.currentImage}\n                  duration={this.state.images[this.state.currentImage].time}\n                  onComplete={() => {\n                        // do your stuff here\n                        return [true, 0]\n                      }}\n                  isPlaying={true}\n\n                  colors={[\n                    ['#004777', 0.33],\n                    ['#F7B801', 0.33],\n                    ['#A30000', 0.33],\n                  ]}\n                >\n                {({ remainingTime }) =>\n                        <div className=\"timer\">\n                          <div className=\"text\">Remaining</div>\n                          <div className=\"value\">{remainingTime}</div>\n                          <div className=\"text\">seconds</div>\n                        </div>\n                    }\n                </CountdownCircleTimer>\n       </div>\n      <div className=\"slideshow-container\">\n        <img\n          className = \"gifExercise\"\n          src={this.state.images[this.state.currentImage].name}\n          value={this.state.images[this.state.currentImage].time}\n          alt=\"cleaning images\"\n        />\n      </div>\n      </div>\n      ) : (\n              <img\n                 className = \"gifExercise\"\n                  src={FinalTraining}\n                 alt=\"end of training\"\n                 />\n       )}\n      </div>\n    );\n  }\n}\n\nexport default StartExerciseList;\n\n"]},"metadata":{},"sourceType":"module"}