{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ExerciseForm.js\";\nimport React, { useState } from 'react';\nimport { Exercises } from \"../Common/Enums\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Dropdown, Label, Form, Input } from 'semantic-ui-react';\nimport { getRandomExercise } from './RandomExercise';\nimport { timeOptions } from \"../Common/Enums\";\nimport ExerciseList from './ExerciseList';\nimport { Container, Row, Col } from \"shards-react\";\n\nclass ExerciseForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRand = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: getRandomExercise(getRandomExercise(Exercises))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.randomFunctionHandler = e => {\n      e.preventDefault();\n      /* First way to show*/\n      //  setRandomExercise(selectedRandom = getRandomExercise(getRandomExercise(E1))); \n      // this.setState({selectedRandom:  {getRandomExercise(getRandomExercise(Exercises))} })\n      //   var rand_val = () => {return(\n      //   <div>\n      //     {getRandomExercise(getRandomExercise(Exercises))}\n      //   </div>\n      // );}\n      // this.setState({selectedRandom: {this.handleRand} })\n\n      console.log(getRandomExercise(getRandomExercise(Exercises)));\n      let x = getRandomExercise(getRandomExercise(Exercises));\n      this.setState({\n        name: x\n      }); //     // <div>\n      //     // </div>\n      // )\n      //  })\n      // })\n      // setRandomExercise(selectedRandom = () => {\n      //     return(\n      //         <div>\n      //             {getRandomExercise(getRandomExercise(Exercises))}\n      //         </div>\n      //     )\n      // });\n    };\n\n    this.filterExercise = (e, data) => {\n      console.log(e.value);\n      var current_dropdown = [];\n\n      for (var key in this.state.current_exercises_key[this.state.myArray[e.value]]) {\n        Object.keys(this.state.current_exercises_key[this.state.myArray[e.value]][key]).forEach(item => {\n          current_dropdown.push({\n            key: item,\n            text: item,\n            value: item\n          });\n        });\n      }\n\n      this.setState({\n        current_exercise: current_dropdown\n      });\n    };\n\n    this.sumbitExerciseHandler = e => {\n      e.preventDefault();\n      let array = this.state.choosenExercisesArray;\n      let id = this.state.id;\n      let obj = {\n        name: this.state.name,\n        time: this.state.time,\n        repeats: this.state.repeats,\n        restTime: this.state.restTime,\n        id: id\n      };\n      array.push(obj);\n      id++;\n      this.setState({\n        id: id,\n        choosenExercisesArray: array\n      });\n    };\n\n    var ex = Object.keys(Exercises).map(key => {\n      var obj = {};\n      obj[key] = Exercises[key];\n      return obj;\n    });\n    var res = [];\n\n    for (var i in ex) {\n      for (var _key in ex[i]) {\n        Object.keys(ex[i][_key]).forEach(item => {\n          res.push({\n            key: item,\n            text: item,\n            value: item\n          });\n        });\n      }\n    }\n\n    var Types_of_exercises = [{\n      key: 'Back exercises',\n      text: 'Back exercises',\n      value: 'Back exercises'\n    }, {\n      key: 'Legs exercises',\n      text: 'Legs exercises',\n      value: 'Legs exercises'\n    }, {\n      key: 'Abs exercisesbs',\n      text: 'Abs exercisesbs',\n      value: 'Abs exercisesbs'\n    }, {\n      key: 'Shoulders exercises',\n      text: 'Shoulders exercises',\n      value: 'Shoulders exercises'\n    }, {\n      key: 'FullBody exercises',\n      text: 'FullBody exercises',\n      value: 'FullBody exercises'\n    }];\n    var myArray = {\n      \"Total\": 10,\n      \"Back exercises\": 0,\n      \"Legs exercises\": 1,\n      \"Abs exercisesbs\": 3,\n      \"Shoulders exercises\": 4,\n      \"FullBody exercises\": 5,\n      \"Chest exercises\": 6\n    };\n    this.state = {\n      current_exercise: res,\n      current_exercises_key: ex,\n      myArray: myArray,\n      Types_of_exercises: Types_of_exercises,\n      exercise_item: [],\n      choosenExercisesArray: [],\n      selectedRandom: \"\",\n      name: \"\",\n      time: \"\",\n      repeats: 1,\n      restTime: 10,\n      id: 1\n    };\n    this.randomFunctionHandler = this.randomFunctionHandler.bind(this);\n  } //   const randomFunctionHandler = (e) => {\n  //     e.preventDefault();\n  //   /* First way to show*/\n  //   //  setRandomExercise(selectedRandom = getRandomExercise(getRandomExercise(E1))); \n  //     setRandomExercise(selectedRandom = () => {\n  //         return(\n  //             <div>\n  //                 {getRandomExercise(getRandomExercise(E1))}\n  //             </div>\n  //         )\n  //     });\n  // }\n\n\n  render() {\n    let {\n      choosenExercisesArray\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"main-content-container px-4\",\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        noGutters: true,\n        className: \"page-header py-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.randomFunctionHandler,\n                className: \"random-exercise-button\",\n                children: \" Start random exercise!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 18\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              pointing: \"right\",\n              children: \"Select exrecise type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              placeholder: \"Select exrecise type\",\n              fluid: true,\n              selection: true,\n              onChange: (event, data) => {\n                console.log(data.value);\n                {\n                  this.filterExercise(data);\n                }\n              },\n              options: this.state.Types_of_exercises\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(Label, {\n                pointing: \"right\",\n                children: \"Select exrecise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                placeholder: \"Select exrecise\",\n                fluid: true,\n                search: true,\n                selection: true,\n                onChange: (event, data) => {\n                  this.setState({\n                    name: data.value\n                  });\n                },\n                options: this.state.current_exercise\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              pointing: \"right\",\n              children: \"Select time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              placeholder: \"Select time\",\n              fluid: true,\n              search: true,\n              selection: true,\n              onChange: (event, data) => {\n                this.setState({\n                  time: data.value\n                });\n              },\n              options: timeOptions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              pointing: \"right\",\n              children: \"Select repeats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"repeats\",\n              type: \"number\",\n              onChange: (event, data) => {\n                this.setState({\n                  repeats: data.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.sumbitExerciseHandler,\n              className: \"exercise-button\",\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-plus-square\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(ExerciseList, {\n          choosenExercisesArray: choosenExercisesArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default ExerciseForm;","map":{"version":3,"sources":["/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ExerciseForm.js"],"names":["React","useState","Exercises","Dropdown","Label","Form","Input","getRandomExercise","timeOptions","ExerciseList","Container","Row","Col","ExerciseForm","Component","constructor","props","handleRand","randomFunctionHandler","e","preventDefault","console","log","x","setState","name","filterExercise","data","value","current_dropdown","key","state","current_exercises_key","myArray","Object","keys","forEach","item","push","text","current_exercise","sumbitExerciseHandler","array","choosenExercisesArray","id","obj","time","repeats","restTime","ex","map","res","i","Types_of_exercises","exercise_item","selectedRandom","bind","render","event"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {Exercises} from \"../Common/Enums\";\nimport 'semantic-ui-css/semantic.min.css';\nimport { Dropdown, Label,Form ,Input} from 'semantic-ui-react'\nimport {getRandomExercise} from './RandomExercise'\nimport  {timeOptions}  from \"../Common/Enums\"\nimport ExerciseList from './ExerciseList';\nimport {Container, Row, Col} from \"shards-react\";\n\n\n\n\nclass ExerciseForm extends React.Component {\n  constructor(props) {\n    super(props);\n  \n    var ex = Object.keys(Exercises).map((key)=>{\n        var obj = {};\n        obj[key] = Exercises[key];\n        \n        return obj;\n        \n            });          \n    var res = [];\n    for (var i in ex){\n        for (var key in ex[i])\n        {\n            Object.keys(ex[i][key]).forEach(item =>{\n                res.push({\n                    key: item,\n                    text: item,\n                    value: item\n                });\n            }) \n        }\n    }\n\n\n\n    var Types_of_exercises = [{\n        key: 'Back exercises',\n        text: 'Back exercises',\n        value: 'Back exercises',\n      },\n      {\n        key: 'Legs exercises',\n        text: 'Legs exercises',\n        value: 'Legs exercises',\n      },\n      {\n        key: 'Abs exercisesbs',\n        text: 'Abs exercisesbs',\n        value: 'Abs exercisesbs',\n      },{\n        key: 'Shoulders exercises',\n        text: 'Shoulders exercises',\n        value: 'Shoulders exercises',\n      },\n      {\n        key: 'FullBody exercises',\n        text: 'FullBody exercises',\n        value: 'FullBody exercises',\n      },]\n      var myArray = {\"Total\":10,\"Back exercises\": 0, \"Legs exercises\": 1, \"Abs exercisesbs\": 3,\"Shoulders exercises\": 4,\"FullBody exercises\": 5, \"Chest exercises\":6};\n      this.state = {\n        current_exercise: res ,\n        current_exercises_key: ex ,\n        myArray: myArray,\n        Types_of_exercises:Types_of_exercises,\n        exercise_item : [],\n        choosenExercisesArray:[],\n        selectedRandom:\"\",\n        name: \"\",\n        time: \"\",\n        repeats: 1,\n        restTime: 10,\n        id: 1,\n      };\n\n      this.randomFunctionHandler = this.randomFunctionHandler.bind(this);\n\n\n  }\n\n//   const randomFunctionHandler = (e) => {\n//     e.preventDefault();\n//   /* First way to show*/\n//   //  setRandomExercise(selectedRandom = getRandomExercise(getRandomExercise(E1))); \n//     setRandomExercise(selectedRandom = () => {\n//         return(\n//             <div>\n//                 {getRandomExercise(getRandomExercise(E1))}\n//             </div>\n//         )\n//     });\n// }\n\nhandleRand = () =>{\n  return(\n            <div>\n                {getRandomExercise(getRandomExercise(Exercises))}\n            </div>\n        )\n}\n\nrandomFunctionHandler = (e) => {\n    e.preventDefault();\n  /* First way to show*/\n  //  setRandomExercise(selectedRandom = getRandomExercise(getRandomExercise(E1))); \n  // this.setState({selectedRandom:  {getRandomExercise(getRandomExercise(Exercises))} })\n  //   var rand_val = () => {return(\n  //   <div>\n  //     {getRandomExercise(getRandomExercise(Exercises))}\n  //   </div>\n  // );}\n  \n  // this.setState({selectedRandom: {this.handleRand} })\n  console.log(getRandomExercise(getRandomExercise(Exercises)));\n  let x= getRandomExercise(getRandomExercise(Exercises))\n  this.setState({name:  x})\n//     // <div>\n  \n      \n//     // </div>\n// )\n//  })\n// })\n \n    // setRandomExercise(selectedRandom = () => {\n    //     return(\n    //         <div>\n    //             {getRandomExercise(getRandomExercise(Exercises))}\n    //         </div>\n    //     )\n    // });\n}\n  \n  filterExercise = (e,data) =>{\n    console.log(e.value);\n    var current_dropdown=[];\n    for (var key in this.state.current_exercises_key[this.state.myArray[e.value]])\n    {\n        Object.keys(this.state.current_exercises_key[this.state.myArray[e.value]][key]).forEach(item =>{\n          current_dropdown.push({\n                key: item,\n                text: item,\n                value: item\n            });\n        }) \n    }\n    this.setState({current_exercise:current_dropdown})\n  }\n\n  sumbitExerciseHandler = (e) => {\n    e.preventDefault();\n    let array = this.state.choosenExercisesArray;\n    let id = this.state.id;\n    let obj = { name: this.state.name, time: this.state.time, repeats: this.state.repeats, restTime: this.state.restTime, id:id };\n    array.push(obj);\n    id ++;\n  \n    this.setState({id:id, choosenExercisesArray: array});\n\n}\n\n  \n  render() {\n      let {choosenExercisesArray} = this.state;\n    return (\n  \n         <Container fluid className=\"main-content-container px-4\">\n         <Row noGutters className=\"page-header py-4\">\n         </Row>\n         <Row>\n            \n         <form>\n        <div>\n            <div><button onClick={this.randomFunctionHandler} className=\"random-exercise-button\"> Start random exercise!</button></div>\n            <Label pointing='right'>Select exrecise type</Label>\n            <Dropdown\n              placeholder='Select exrecise type'\n              fluid\n              selection\n              onChange={(event, data) => {\n                console.log(data.value);\n                {this.filterExercise(data)}\n            }\n          }\n              options={this.state.Types_of_exercises}\n                />\n               <Form.Field>\n              <Label pointing='right'>Select exrecise</Label>\n              <Dropdown\n              placeholder='Select exrecise'\n              fluid\n              search\n              selection\n              onChange={(event,data)=>{\n                this.setState({name: data.value})\n              }}\n              options={this.state.current_exercise}\n                />\n                </Form.Field>\n                <Label pointing='right'>Select time</Label>\n                <Dropdown\n              placeholder='Select time'\n              fluid\n              search\n              selection\n\n              onChange={(event,data)=>{\n                this.setState({time:data.value})\n              }}\n              options={timeOptions}\n                />\n                <Label pointing='right'>Select repeats</Label>\n                  <Input \n                  placeholder='repeats'\n                  type=\"number\"\n                  onChange={(event,data)=>{\n                    this.setState({repeats:data.value})\n                  }}\n                   />\n                <button onClick={this.sumbitExerciseHandler} className=\"exercise-button\" type=\"submit\">\n                    <i className=\"fas fa-plus-square\"></i>\n                </button>         \n            </div>\n            {/* {selectedRandom} */}\n         </form> \n      <ExerciseList choosenExercisesArray={choosenExercisesArray}/>\n\n         </Row>\n     </Container>\n    );\n  }\n}\n\nexport default ExerciseForm;"]},"metadata":{},"sourceType":"module"}