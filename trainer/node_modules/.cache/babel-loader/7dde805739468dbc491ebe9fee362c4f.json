{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ExerciseList.js\";\nimport React from \"react\";\nimport Exercise from \"./ExerciseItem\";\nimport { Container, Row } from \"shards-react\";\n\nconst ExerciseList = ({\n  choosenExercisesArray\n}) => {\n  const exercisesDuration = () => {\n    let count = 0;\n    choosenExercisesArray.forEach(exercise => {\n      count += (exercise.time + exercise.restTime) * exercise.repeats;\n    }); //consider removing one restTime from total count\n\n    let displayCount = `${Math.trunc(count / 60)}:${count % 60} minutes`;\n    return displayCount;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-4\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Training List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), choosenExercisesArray.map(exercise => /*#__PURE__*/_jsxDEV(Exercise, {\n      exercise: exercise\n    }, exercise.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Row, {\n      children: [\"Current duration with rest breaks: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 52\n      }, this), exercisesDuration()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ExerciseList;\nexport default ExerciseList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExerciseList\");","map":{"version":3,"sources":["/Users/shiransteinberg/Documents/Projects/Trainer/trainer/src/Components/ExerciseList.js"],"names":["React","Exercise","Container","Row","ExerciseList","choosenExercisesArray","exercisesDuration","count","forEach","exercise","time","restTime","repeats","displayCount","Math","trunc","map","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,cAA/B;;AAEA,MAAMC,YAAY,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAA8B;AAE/C,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAIC,KAAK,GAAG,CAAZ;AACAF,IAAAA,qBAAqB,CAACG,OAAtB,CAA+BC,QAAD,IAAc;AACxCF,MAAAA,KAAK,IAAG,CAACE,QAAQ,CAACC,IAAT,GAAgBD,QAAQ,CAACE,QAA1B,IAAsCF,QAAQ,CAACG,OAAvD;AACH,KAFD,EAF4B,CAK5B;;AACA,QAAIC,YAAY,GAAI,GAAEC,IAAI,CAACC,KAAL,CAAWR,KAAK,GAAC,EAAjB,CAAqB,IAAGA,KAAK,GAAC,EAAG,UAAvD;AACA,WAAOM,YAAP;AACH,GARD;;AAUA,sBACI,QAAC,SAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAIKR,qBAAqB,CAACW,GAAtB,CAA2BP,QAAD,iBACvB,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEA;AAApB,OAAmCA,QAAQ,CAACQ,EAA5C;AAAA;AAAA;AAAA;AAAA,YADH,CAJL,eAOI,QAAC,GAAD;AAAA,qEACuC;AAAA;AAAA;AAAA;AAAA,cADvC,EAEKX,iBAAiB,EAFtB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA3BD;;KAAMF,Y;AA6BN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport Exercise from \"./ExerciseItem\";\nimport { Container, Row } from \"shards-react\";\n\nconst ExerciseList = ( {choosenExercisesArray}) => {\n\n    const exercisesDuration = () => {\n        let count = 0;\n        choosenExercisesArray.forEach((exercise) => {\n            count+= (exercise.time + exercise.restTime) * exercise.repeats;\n        })\n        //consider removing one restTime from total count\n        let displayCount = `${Math.trunc(count/60)}:${count%60} minutes`;\n        return displayCount;\n    }\n\n    return(\n        <Container>\n            <Row className=\"py-4\">\n                <h1>Training List</h1>\n            </Row>\n            {choosenExercisesArray.map((exercise) => (\n                <Exercise exercise={exercise} key={exercise.id} />\n            ))}\n            <Row>\n                Current duration with rest breaks: <br />\n                {exercisesDuration()}\n                {/* Remaining time to total: */}\n            </Row>\n        </Container>\n    );\n};\n\nexport default ExerciseList;"]},"metadata":{},"sourceType":"module"}